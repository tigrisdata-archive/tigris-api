# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi
openapi: 3.0.3
info:
    title: Observability API Reference
    description: |4-
        ## Overview
        This section is organized around Tigris observability HTTP APIs. The APIs accepts JSON requests and returns JSON-encoded responses. The APIs conforms to standard HTTP status codes.
    license:
        name: Apache License
        url: https://github.com/tigrisdata/tigris/blob/main/LICENSE
    version: 0.0.1
paths:
    /observability/v1/metrics/timeseries/query:
        post:
            tags:
                - Observability
                - metrics
            summary: Queries time series metrics.
            description: Queries time series metrics
            operationId: Observability_QueryTimeSeriesMetrics
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/QueryTimeSeriesMetricsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryTimeSeriesMetricsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AdditionalFunction:
            type: object
            properties:
                rollup:
                    $ref: '#/components/schemas/RollupFunction'
            description: Additional function to apply on metrics query
        DataPoint:
            type: object
            properties:
                timestamp:
                    type: integer
                    format: int64
                value:
                    type: number
                    format: double
            description: Represents the data point in timeseries.
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        MetricSeries:
            type: object
            properties:
                from:
                    type: integer
                    format: int64
                to:
                    type: integer
                    format: int64
                metric:
                    type: string
                scope:
                    type: string
                dataPoints:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataPoint'
            description: Represents series in timeseries based on input query.
        QueryTimeSeriesMetricsRequest:
            type: object
            properties:
                db:
                    type: string
                collection:
                    type: string
                from:
                    type: integer
                    format: int64
                to:
                    type: integer
                    format: int64
                metric_name:
                    type: string
                tigris_operation:
                    enum:
                        - ALL
                        - READ
                        - WRITE
                    type: string
                    format: enum
                space_aggregation:
                    enum:
                        - AVG
                        - MIN
                        - MAX
                        - SUM
                    type: string
                    format: enum
                space_aggregated_by:
                    type: array
                    items:
                        type: string
                function:
                    enum:
                        - RATE
                        - COUNT
                        - NONE
                    type: string
                    format: enum
                quantile:
                    type: number
                    format: float
                additionalFunctions:
                    type: array
                    items:
                        $ref: '#/components/schemas/AdditionalFunction'
            description: Requests the time series metrics
        QueryTimeSeriesMetricsResponse:
            type: object
            properties:
                from:
                    type: integer
                    format: int64
                to:
                    type: integer
                    format: int64
                query:
                    type: string
                series:
                    type: array
                    items:
                        $ref: '#/components/schemas/MetricSeries'
            description: QueryTimeSeriesMetric responds with this type.
        RollupFunction:
            type: object
            properties:
                aggregator:
                    enum:
                        - ROLLUP_AGGREGATOR_SUM
                        - ROLLUP_AGGREGATOR_COUNT
                        - ROLLUP_AGGREGATOR_MIN
                        - ROLLUP_AGGREGATOR_MAX
                        - ROLLUP_AGGREGATOR_AVG
                    type: string
                    format: enum
                interval:
                    type: integer
                    format: int64
            description: Rollup function aggregates the slices of metrics returned by original query and lets you operate on the slices using aggregator and constructs the bigger slice of your choice of interval (specified in seconds).
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
tags:
    - name: Observability
    - name: metrics
      description: Tigris supports pluggable observability providers. The metrics section of API provides way to query Tigris metrics
