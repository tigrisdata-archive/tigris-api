# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/apps/protoc-gen-openapi
openapi: 3.0.3
info:
    title: TigrisDB API
    version: 0.0.1
paths:
    /api/v1/databases/list:
        get:
            tags:
                - TigrisDB
            operationId: TigrisDB_ListDatabases
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDatabasesResponse'
    /api/v1/databases/{db}/collections/list:
        get:
            tags:
                - TigrisDB
            operationId: TigrisDB_ListCollections
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCollectionsResponse'
    /api/v1/databases/{db}/collections/{collection}/alter:
        post:
            tags:
                - TigrisDB
            operationId: TigrisDB_AlterCollection
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AlterCollectionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AlterCollectionResponse'
    /api/v1/databases/{db}/collections/{collection}/create:
        post:
            tags:
                - TigrisDB
            description: The following APIs are related to DDLs supported by TigrisDB
            operationId: TigrisDB_CreateCollection
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCollectionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCollectionResponse'
    /api/v1/databases/{db}/collections/{collection}/documents/delete:
        delete:
            tags:
                - TigrisDB
            operationId: TigrisDB_Delete
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteResponse'
    /api/v1/databases/{db}/collections/{collection}/documents/insert:
        post:
            tags:
                - TigrisDB
            description: Following APIs are related to DMLs supported by TigrisDB
            operationId: TigrisDB_Insert
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InsertRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InsertResponse'
    /api/v1/databases/{db}/collections/{collection}/documents/read:
        post:
            tags:
                - TigrisDB
            operationId: TigrisDB_Read
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReadRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReadResponse'
    /api/v1/databases/{db}/collections/{collection}/documents/update:
        put:
            tags:
                - TigrisDB
            operationId: TigrisDB_Update
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateResponse'
    /api/v1/databases/{db}/collections/{collection}/drop:
        delete:
            tags:
                - TigrisDB
            operationId: TigrisDB_DropCollection
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DropCollectionResponse'
    /api/v1/databases/{db}/collections/{collection}/truncate:
        delete:
            tags:
                - TigrisDB
            operationId: TigrisDB_TruncateCollection
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TruncateCollectionResponse'
    /api/v1/databases/{db}/create:
        post:
            tags:
                - TigrisDB
            operationId: TigrisDB_CreateDatabase
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDatabaseRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDatabaseResponse'
    /api/v1/databases/{db}/drop:
        delete:
            tags:
                - TigrisDB
            operationId: TigrisDB_DropDatabase
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DropDatabaseRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DropDatabaseResponse'
    /api/v1/databases/{db}/transactions/begin:
        post:
            tags:
                - TigrisDB
            description: Transactional APIs
            operationId: TigrisDB_BeginTransaction
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BeginTransactionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BeginTransactionResponse'
    /api/v1/databases/{db}/transactions/commit:
        post:
            tags:
                - TigrisDB
            operationId: TigrisDB_CommitTransaction
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CommitTransactionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommitTransactionResponse'
    /api/v1/databases/{db}/transactions/rollback:
        post:
            tags:
                - TigrisDB
            operationId: TigrisDB_RollbackTransaction
            parameters:
                - name: db
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RollbackTransactionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RollbackTransactionResponse'
components:
    schemas:
        AlterCollectionRequest:
            type: object
            properties:
                db:
                    type: string
                collection:
                    type: string
                schema:
                    type: object
                options:
                    $ref: '#/components/schemas/CollectionOptions'
        AlterCollectionResponse:
            type: object
            properties:
                msg:
                    type: string
        BeginTransactionRequest:
            type: object
            properties:
                db:
                    type: string
                options:
                    $ref: '#/components/schemas/TransactionOptions'
        BeginTransactionResponse:
            type: object
            properties:
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
        CollectionOptions:
            type: object
            properties: {}
        CommitTransactionRequest:
            type: object
            properties:
                db:
                    type: string
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
        CommitTransactionResponse:
            type: object
            properties: {}
        CreateCollectionRequest:
            type: object
            properties:
                db:
                    type: string
                collection:
                    type: string
                schema:
                    type: object
                options:
                    $ref: '#/components/schemas/CollectionOptions'
        CreateCollectionResponse:
            type: object
            properties:
                msg:
                    type: string
        CreateDatabaseRequest:
            type: object
            properties:
                db:
                    type: string
                options:
                    $ref: '#/components/schemas/DatabaseOptions'
        CreateDatabaseResponse:
            type: object
            properties:
                msg:
                    type: string
        DatabaseOptions:
            type: object
            properties: {}
        DeleteRequest:
            type: object
            properties:
                db:
                    type: string
                collection:
                    type: string
                filter:
                    type: object
                options:
                    $ref: '#/components/schemas/DeleteRequestOptions'
        DeleteRequestOptions:
            type: object
            properties:
                write_options:
                    $ref: '#/components/schemas/WriteOptions'
        DeleteResponse:
            type: object
            properties: {}
        DropCollectionResponse:
            type: object
            properties:
                msg:
                    type: string
        DropDatabaseRequest:
            type: object
            properties:
                db:
                    type: string
                options:
                    $ref: '#/components/schemas/DatabaseOptions'
        DropDatabaseResponse:
            type: object
            properties:
                msg:
                    type: string
        InsertRequest:
            type: object
            properties:
                db:
                    type: string
                collection:
                    type: string
                documents:
                    type: array
                    items:
                        type: object
                options:
                    $ref: '#/components/schemas/InsertRequestOptions'
        InsertRequestOptions:
            type: object
            properties:
                write_options:
                    $ref: '#/components/schemas/WriteOptions'
                must_not_exist:
                    type: boolean
        InsertResponse:
            type: object
            properties: {}
        ListCollectionsResponse:
            type: object
            properties:
                collections:
                    type: array
                    items:
                        type: string
        ListDatabasesResponse:
            type: object
            properties:
                dbs:
                    type: array
                    items:
                        type: string
        ReadRequest:
            type: object
            properties:
                db:
                    type: string
                collection:
                    type: string
                filter:
                    type: object
                fields:
                    type: string
                    format: byte
                options:
                    $ref: '#/components/schemas/ReadRequestOptions'
        ReadRequestOptions:
            type: object
            properties:
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
                limit:
                    type: integer
                    format: int64
                skip:
                    type: integer
                    format: int64
                offset:
                    type: string
                    format: byte
        ReadResponse:
            type: object
            properties:
                doc:
                    type: object
                key:
                    type: string
                    format: byte
        RollbackTransactionRequest:
            type: object
            properties:
                db:
                    type: string
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
        RollbackTransactionResponse:
            type: object
            properties: {}
        TransactionCtx:
            type: object
            properties:
                id:
                    type: string
                origin:
                    type: string
        TransactionOptions:
            type: object
            properties: {}
        TruncateCollectionResponse:
            type: object
            properties:
                msg:
                    type: string
        UpdateRequest:
            type: object
            properties:
                db:
                    type: string
                collection:
                    type: string
                fields:
                    type: object
                filter:
                    type: object
                options:
                    $ref: '#/components/schemas/UpdateRequestOptions'
        UpdateRequestOptions:
            type: object
            properties:
                write_options:
                    $ref: '#/components/schemas/WriteOptions'
        UpdateResponse:
            type: object
            properties:
                rc:
                    type: integer
                    format: int32
        WriteOptions:
            type: object
            properties:
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
tags:
    - name: TigrisDB
