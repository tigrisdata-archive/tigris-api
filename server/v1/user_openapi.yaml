# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi
openapi: 3.0.3
info:
    title: User API Reference
    description: |4-
        ## Overview
        This section is organized around Tigris userHTTP APIs. The APIs accepts JSON requests and returns JSON-encoded responses. The APIs conforms to standard HTTP status codes.
    license:
        name: Apache License
        url: https://github.com/tigrisdata/tigris/blob/main/LICENSE
    version: 0.0.1
paths:
    /users/v1/applications/create:
        post:
            tags:
                - User
                - application
                - user
            summary: Creates the application.
            description: Create an application.
            operationId: User_CreateApplication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateApplicationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateApplicationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/v1/applications/delete:
        delete:
            tags:
                - User
                - application
                - user
            summary: Creates the application.
            description: Delete an application.
            operationId: User_DeleteApplication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteApplicationsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteApplicationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/v1/applications/list:
        post:
            tags:
                - User
                - application
                - user
            summary: List applications.
            description: Lists all application visible to requesting actor.
            operationId: User_ListApplications
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListApplicationsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListApplicationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/v1/applications/rotate:
        post:
            tags:
                - User
                - application
                - user
            summary: Rotates the application secret.
            description: rotateApplicationSecret returns the new application with rotated secret
            operationId: User_RotateApplicationSecret
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RotateApplicationSecretRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RotateApplicationSecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/v1/applications/update:
        post:
            tags:
                - User
                - application
                - user
            summary: Updates the application.
            description: Update an application.
            operationId: User_UpdateApplication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateApplicationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateApplicationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/v1/metadata/{metadataKey}/get:
        post:
            tags:
                - User
                - metadata
                - user
            summary: Reads the user metadata.
            description: insertUserMetadata inserts the user metadata object
            operationId: User_GetUserMetadata
            parameters:
                - name: metadataKey
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUserMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/v1/metadata/{metadataKey}/insert:
        post:
            tags:
                - User
                - metadata
                - user
            summary: Inserts user metadata.
            description: insertUserMetadata inserts the user metadata object
            operationId: User_InsertUserMetadata
            parameters:
                - name: metadataKey
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InsertUserMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InsertUserMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/v1/metadata/{metadataKey}/update:
        post:
            tags:
                - User
                - metadata
                - user
            summary: Updates user metadata.
            description: updateUserMetadata updates the user metadata object
            operationId: User_UpdateUserMetadata
            parameters:
                - name: metadataKey
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        Application:
            type: object
            properties:
                id:
                    type: string
                    description: Generated client id
                name:
                    type: string
                    description: A human readable app name
                description:
                    type: string
                    description: A human readable app description
                secret:
                    type: string
                    description: Generated app secret
                created_at:
                    type: integer
                    description: Created at
                    format: int64
                created_by:
                    type: string
                    description: Created by
                updated_at:
                    type: integer
                    description: Updated at
                    format: int64
                updated_by:
                    type: string
                    description: Updated by
            description: An user application
        CreateApplicationRequest:
            type: object
            properties:
                name:
                    type: string
                    description: A human readable app name
                description:
                    type: string
                    description: A human readable app description
            description: Request creation of user application
        CreateApplicationResponse:
            type: object
            properties:
                created_application:
                    $ref: '#/components/schemas/Application'
            description: CreateApplication returns created application
        DeleteApplicationResponse:
            type: object
            properties:
                deleted:
                    type: boolean
                    description: status flag for delete operation
            description: DeleteApplication returns the flag to convey if application was deleted
        DeleteApplicationsRequest:
            type: object
            properties:
                id:
                    type: string
                    description: application id
            description: Request deletion of an application
        GetUserMetadataRequest:
            type: object
            properties:
                metadataKey:
                    type: string
            description: Request user metadata
        GetUserMetadataResponse:
            type: object
            properties:
                metadataKey:
                    type: string
                userId:
                    type: string
                namespaceId:
                    type: integer
                    format: uint32
                value:
                    type: string
                    format: byte
            description: User metadata response
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        InsertUserMetadataRequest:
            type: object
            properties:
                metadataKey:
                    type: string
                value:
                    type: string
                    format: byte
            description: Request insertion of user metadata
        InsertUserMetadataResponse:
            type: object
            properties:
                metadataKey:
                    type: string
                userId:
                    type: string
                namespaceId:
                    type: integer
                    format: uint32
                value:
                    type: string
                    format: byte
            description: Insertion of user metadata response
        ListApplicationsRequest:
            type: object
            properties: {}
            description: Request listing of all the application those are visible to requesting actor
        ListApplicationsResponse:
            type: object
            properties:
                applications:
                    type: array
                    items:
                        $ref: '#/components/schemas/Application'
            description: ListApplication returns one or more visible application to user
        RotateApplicationSecretRequest:
            type: object
            properties:
                id:
                    type: string
            description: Request rotation of an application secret
        RotateApplicationSecretResponse:
            type: object
            properties:
                application:
                    $ref: '#/components/schemas/Application'
            description: RotateApplicationRequest returns the new application with rotated secret
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateApplicationRequest:
            type: object
            properties:
                id:
                    type: string
                    description: application id
                name:
                    type: string
                    description: A new human readable app name
                description:
                    type: string
                    description: A new human readable app description
            description: Request creation of user application
        UpdateApplicationResponse:
            type: object
            properties:
                updated_application:
                    $ref: '#/components/schemas/Application'
            description: CreateApplication returns created application
        UpdateUserMetadataRequest:
            type: object
            properties:
                metadataKey:
                    type: string
                value:
                    type: string
                    format: byte
            description: Request update of user metadata
        UpdateUserMetadataResponse:
            type: object
            properties:
                metadataKey:
                    type: string
                userId:
                    type: string
                namespaceId:
                    type: integer
                    format: uint32
                value:
                    type: string
                    format: byte
            description: Update of user metadata response
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
tags:
    - name: User
    - name: application
      description: Tigris supports application based authentication. This section provides API to manage user applications
    - name: metadata
      description: Tigris supports user metadata management. This section provides API to manage metadata about user
    - name: user
      description: Tigris supports basic user management. This section provides API to manage user
